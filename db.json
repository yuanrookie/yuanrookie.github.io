{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/contact.png","path":"medias/contact.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/friends.json.txt","hash":"d35538ea010e81af33809eb7586e1744d96699c7","modified":1687310652400},{"_id":"source/_posts/flex布局实现.md","hash":"dd1c98a43058cac9ba9062cd1f3fe00da54c8fe6","modified":1687329791949},{"_id":"source/categories/index.md","hash":"6615886b4b2b33812b50eb0480f98426ad10fc8b","modified":1687310447489},{"_id":"source/about/index.md","hash":"16b90ec6f7c909a48851d3276e21a180740cbf7e","modified":1687310550047},{"_id":"source/_posts/基础编程题(一).md","hash":"4f12e2e737ccd8b8e542ccc5cce91a5d599800dc","modified":1687316111531},{"_id":"source/_posts/hello-world.md","hash":"40e804610ff712f079ace7012b862b4efecf82fb","modified":1687313003943},{"_id":"source/tags/index.md","hash":"9ac7797b662b01444791a4eca65f579b8e3e1f06","modified":1687310498955},{"_id":"source/friends/index.md","hash":"b8096bd525f1e1228d2a2be47b7b02f62acdfe56","modified":1687310583536},{"_id":"source/CNAME","hash":"f687f2013c738ee48fdc0dd793740473464e84af","modified":1687332522034},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1687310038099},{"_id":"themes/hexo-theme-matery/README.md","hash":"0366f3d50b18d095b0581e7b5974e3283d693884","modified":1687310038166},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1687310038123},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1687310038143},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"089de96e2165ea2a8a3adf38ebda85b65e7f716e","modified":1687310038188},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"0560251632bc27ee357481464995e0b8d012df58","modified":1687315923426},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1687310038234},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1687310038251},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"ae34ac0e175c3037675722e436637efbceea32f0","modified":1687310038271},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1687310038311},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1687310038499},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1687310038441},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"41849f9300b8dc47048333fcf4a897dd8a2a13ca","modified":1687310038362},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1687310038529},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1687310038588},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"19d62e521c4253496db559478db5164ddfd2480e","modified":1687310038628},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"92892bab5578ccf758ce57e19fca08be80d0d5b9","modified":1687310038680},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"974b44eb3e343cd3ee57ebad34bbb0eff4184400","modified":1687310038826},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"4dc6f08e7709cc04e886be72dbf0d06469f0effc","modified":1687310038755},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1687310038876},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1687310038932},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1687310038960},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1687310040933},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1687310038981},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1687310039036},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1687310039001},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1687310039067},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1687310039191},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1687310039134},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1687310039223},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"28617bf2a35a4269eba6df466acd174e416d2d1e","modified":1687310039113},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1687310039352},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1687310039327},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"3be24e4c370671eda53bdfd99fb748f4a22948ba","modified":1687311883608},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1687310039386},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"f8438ac80df005934a330b029de292d26f0b6ecb","modified":1687310039482},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1687310039419},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1687310039520},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"5f09386aece8f9cf31f6059bbde79cd6c5171493","modified":1687310039654},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1687310039626},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"76b4a37e0364380b143fdf94bf1a5e6941564414","modified":1687310039599},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1687310039732},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1687310039808},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1687310039788},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1687310039837},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1687310040025},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1687310039881},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"880ebaf78a947631a38ad0b3d65201315845a264","modified":1687310039989},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1687310040279},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1687310040172},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1687310040253},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1687310040309},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"0e4c0a6154aa34007849928ca88f05b6185b256e","modified":1687310040395},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"8ea74de0c362fd869cd315dc68631b0232d7971a","modified":1687312308758},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1687310040425},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1687310040334},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1687310040518},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1687310040498},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1687310040470},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1687310040555},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1687310040629},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1687310040670},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1687310040591},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1687310040703},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1687310040850},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1687310040732},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1687310040882},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1687310040813},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"a0e002377af2a7f7e4da6d9a644de97adb035925","modified":1687310040915},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1687310040957},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1687310041007},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1687310041030},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1687310040984},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1687310041051},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1687310041129},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1687310041098},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1687310043510},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"aae67718d89e9fc3af27a96190ca0798381dc7ef","modified":1687314000205},{"_id":"themes/hexo-theme-matery/source/medias/contact.png","hash":"443ea472dd49b74d9d70295837eb381c8c64f02c","modified":1687310043526},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1687310043558},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1687310043573},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1687310041184},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1687310041159},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1687310041199},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1687310041227},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1687310041281},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1687310041700},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1687310041731},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1687310041745},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1687310041760},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1687310041791},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1687310041820},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1687310041846},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1687310041869},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1687310041917},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1687310041970},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1687310042272},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1687310042371},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1687310042461},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1687310042495},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1687310042518},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1687310042831},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1687310043004},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1687310043041},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1687310043056},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1687310043081},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1687310043320},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1687310043356},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1687310043099},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1687310043738},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1687310043818},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1687310043784},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1687310043832},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1687310043898},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1687310043928},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1687310043942},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1687310043957},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1687310043973},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1687310044003},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1687310044037},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1687310044052},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"11b8e2df093568c17458f4b666b347222f8fb638","modified":1687312487212},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"7ffb933adc05dc4366db36a67259734275bd736e","modified":1687312450624},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1687310041455},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1687310041503},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1687310041525},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1687310041547},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1687310042610},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1687310042651},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1687310042666},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1687310042630},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1687310042681},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1687310042700},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1687310042729},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1687310042790},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1687310042714},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1687310042745},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1687310043151},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1687310043128},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1687310043174},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1687310043194},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1687310043209},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1687310043253},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1687310043296},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1687310042025},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1687310042429},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1687310042579},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1687310043401},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1687310043592},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1687310043625},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1687310043641},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1687310043707},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1687310043724},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1687310043754},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1687310043769},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1687310043800},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1687310043850},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1687310043865},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1687310043882},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1687310043912},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1687310043988},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1687310044019},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1687310044068},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1687310041409},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1687310041334},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1687310041387},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1687310041432},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1687310041646},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1687310041667},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1687310041309},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1687310043542},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1687310042348},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1687310042858},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1687310042958},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1687310043476},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1687310043609},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1687310043674},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1687310043690},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1687310041481},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1687310041571},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1687310041624},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1687310043658},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1687310041362},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1687310042235},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1687310041600},{"_id":"public/atom.xml","hash":"1f9e2200dd7d6227029b1c91197677f8196073be","modified":1687332537706},{"_id":"public/search.xml","hash":"5370b241c3cade9ca97e7e1f5963d1793d0a6b66","modified":1687332537706},{"_id":"public/about/index.html","hash":"842aa82fa4262b8dbdccbe6a8244242c179bf72d","modified":1687332537706},{"_id":"public/tags/index.html","hash":"8d122c73c162a5f64a219ce582a3161ff63b42b0","modified":1687332537706},{"_id":"public/categories/index.html","hash":"2ca517e5dae59b1f61af34e5abdfa6abb39d493f","modified":1687332537706},{"_id":"public/friends/index.html","hash":"ca414af944db35092290c818aba614b20f7485fd","modified":1687332537706},{"_id":"public/2023/062116107.html","hash":"6b65c760c87a48ddd710af48a8c28fdd86e29c8d","modified":1687332537706},{"_id":"public/2023/061811.html","hash":"f1e4a11623521f6771d97bffd9e4074c6cf4d4d1","modified":1687332537706},{"_id":"public/archives/2023/index.html","hash":"0142cdc930f1578e1d8ae20819df72d3da75e25a","modified":1687332537706},{"_id":"public/2023/061634537.html","hash":"5d551cbb0881117023db1387795bd5a9769b78a1","modified":1687332537706},{"_id":"public/archives/index.html","hash":"3b3344781f69500b0556e04ca3db8a280c7b0ff7","modified":1687332537706},{"_id":"public/categories/flex/index.html","hash":"3673f98b79e97bdce3efd3028d29aef0816e11f9","modified":1687332537706},{"_id":"public/archives/2023/06/index.html","hash":"095e5ca5cb029cd89a3d90ae25e11cc7303dbbf7","modified":1687332537706},{"_id":"public/index.html","hash":"a60074d7736000b5957c44b1860eb366bc8e8c74","modified":1687332537706},{"_id":"public/categories/编程学习总结/index.html","hash":"7862a1aaeb940bdf2a87c2d50d123604bdfdb0c4","modified":1687332537706},{"_id":"public/tags/blog/index.html","hash":"140a7f9c338d66c758928a135d1282cf039dbc68","modified":1687332537706},{"_id":"public/tags/hexo/index.html","hash":"69eafbda3de644141c7a498246657ccaa9783751","modified":1687332537706},{"_id":"public/CNAME","hash":"f687f2013c738ee48fdc0dd793740473464e84af","modified":1687332537706},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1687332537706},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1687332537706},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1687332537706},{"_id":"public/medias/avatar.jpg","hash":"aae67718d89e9fc3af27a96190ca0798381dc7ef","modified":1687332537706},{"_id":"public/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1687332537706},{"_id":"public/medias/contact.png","hash":"443ea472dd49b74d9d70295837eb381c8c64f02c","modified":1687332537706},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1687332537706},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1687332537706},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1687332537706},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1687332537706},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1687332537706},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1687332537706},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1687332537706},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1687332537706},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1687332537706},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1687332537706},{"_id":"public/medias/reward/wechat.png","hash":"7ffb933adc05dc4366db36a67259734275bd736e","modified":1687332537706},{"_id":"public/medias/reward/alipay.jpg","hash":"11b8e2df093568c17458f4b666b347222f8fb638","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1687332537706},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1687332537706},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1687332537706},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1687332537706},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1687332537706},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1687332537706},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1687332537706},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1687332537706},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1687332537706},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1687332537706},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1687332537706},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1687332537706},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1687332537706},{"_id":"public/css/prism-tomorrow.css","hash":"3b99487dfc9b4e51e9105a93743b92a761840e34","modified":1687332537706},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1687332537706},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1687332537706},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1687332537706},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1687332537706},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1687332537706},{"_id":"public/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1687332537706},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1687332537706},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1687332537706},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1687332537706},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1687332537706},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1687332537706},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1687332537706},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1687332537706},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1687332537706},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1687332537706},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1687332537706},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1687332537706},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1687332537706},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1687332537706},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1687332537706},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1687332537706},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1687332537706},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1687332537706},{"_id":"public/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1687332537706},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1687332537706},{"_id":"public/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1687332537706},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1687332537706},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1687332537706},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1687332537706},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1687332537706},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1687332537706},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1687332537706},{"_id":"public/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1687332537706},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1687332537706},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1687332537706},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1687332537706},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1687332537706},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1687332537706},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1687332537706},{"_id":"public/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1687332537706},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1687332537706},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1687332537706},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1687332537706},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1687332537706},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1687332537706},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1687332537706},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1687332537706},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1687332537706},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1687332537706},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1687332537706},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1687332537706},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1687332537706},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1687332537706},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1687332537706},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1687332537706},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1687332537706},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1687332537706},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1687332537706},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1687332537706},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1687332537706},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1687332537706},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1687332537706},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1687332537706},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1687332537706},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1687332537706},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1687332537706},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1687332537706},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1687332537706},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1687332537706},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1687332537706},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1687332537706},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1687332537706},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1687332537706}],"Category":[{"name":"flex","_id":"clj5e874q0004vkmu1uf60h3p"},{"name":"编程学习总结","_id":"clj5e874w0009vkmuhi049gpf"}],"Data":[{"_id":"friends.json","data":"[ {\n    \"avatar\": \"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2\",\n    \"name\": \"Fabric\",\n    \"introduction\": \"A Blockchain Platform for the Enterprise\",\n    \"url\": \"https://hyperledger-fabric.readthedocs.io/en/master/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"https://www.bootcdn.cn/assets/img/maoyun.svg\",\n    \"name\": \"BootCDN\",\n    \"introduction\": \"稳定、快速、免费的前端开源项目 CDN 加速服务。\",\n    \"url\": \"https://www.bootcdn.cn/\",\n    \"title\": \"前去加速\"\n}]"}],"Page":[{"title":"about","type":"about","layout":"about","date":"2023-06-21T01:22:07.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ntype: \"about\"\nlayout: \"about\"\ndate: 2023-06-21 09:22:07\n---\n","updated":"2023-06-21T01:22:30.047Z","path":"about/index.html","comments":1,"_id":"clj5e874e0000vkmu93jwcwky","content":"","site":{"data":{"friends.json":"[ {\n    \"avatar\": \"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2\",\n    \"name\": \"Fabric\",\n    \"introduction\": \"A Blockchain Platform for the Enterprise\",\n    \"url\": \"https://hyperledger-fabric.readthedocs.io/en/master/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"https://www.bootcdn.cn/assets/img/maoyun.svg\",\n    \"name\": \"BootCDN\",\n    \"introduction\": \"稳定、快速、免费的前端开源项目 CDN 加速服务。\",\n    \"url\": \"https://www.bootcdn.cn/\",\n    \"title\": \"前去加速\"\n}]"}},"excerpt":"","more":""},{"title":"tags","type":"tags","layout":"tags","date":"2023-06-21T01:21:07.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: \"tags\"\nlayout: \"tags\"\ndate: 2023-06-21 09:21:07\n---\n","updated":"2023-06-21T01:21:38.955Z","path":"tags/index.html","comments":1,"_id":"clj5e874l0002vkmucq4tgc5t","content":"","site":{"data":{"friends.json":"[ {\n    \"avatar\": \"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2\",\n    \"name\": \"Fabric\",\n    \"introduction\": \"A Blockchain Platform for the Enterprise\",\n    \"url\": \"https://hyperledger-fabric.readthedocs.io/en/master/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"https://www.bootcdn.cn/assets/img/maoyun.svg\",\n    \"name\": \"BootCDN\",\n    \"introduction\": \"稳定、快速、免费的前端开源项目 CDN 加速服务。\",\n    \"url\": \"https://www.bootcdn.cn/\",\n    \"title\": \"前去加速\"\n}]"}},"excerpt":"","more":""},{"title":"categories","type":"categories","layout":"categories","date":"2023-06-21T01:19:48.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ntype: \"categories\"\nlayout: \"categories\"\ndate: 2023-06-21 09:19:48\n---\n","updated":"2023-06-21T01:20:47.489Z","path":"categories/index.html","comments":1,"_id":"clj5e874t0006vkmuhvhbgec7","content":"","site":{"data":{"friends.json":"[ {\n    \"avatar\": \"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2\",\n    \"name\": \"Fabric\",\n    \"introduction\": \"A Blockchain Platform for the Enterprise\",\n    \"url\": \"https://hyperledger-fabric.readthedocs.io/en/master/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"https://www.bootcdn.cn/assets/img/maoyun.svg\",\n    \"name\": \"BootCDN\",\n    \"introduction\": \"稳定、快速、免费的前端开源项目 CDN 加速服务。\",\n    \"url\": \"https://www.bootcdn.cn/\",\n    \"title\": \"前去加速\"\n}]"}},"excerpt":"","more":""},{"title":"friends","type":"friends","layout":"friends","date":"2023-06-21T01:22:46.000Z","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ntype: \"friends\"\nlayout: \"friends\"\ndate: 2023-06-21 09:22:46\n---\n","updated":"2023-06-21T01:23:03.536Z","path":"friends/index.html","comments":1,"_id":"clj5e874v0008vkmugzo9afq7","content":"","site":{"data":{"friends.json":"[ {\n    \"avatar\": \"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2\",\n    \"name\": \"Fabric\",\n    \"introduction\": \"A Blockchain Platform for the Enterprise\",\n    \"url\": \"https://hyperledger-fabric.readthedocs.io/en/master/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"https://www.bootcdn.cn/assets/img/maoyun.svg\",\n    \"name\": \"BootCDN\",\n    \"introduction\": \"稳定、快速、免费的前端开源项目 CDN 加速服务。\",\n    \"url\": \"https://www.bootcdn.cn/\",\n    \"title\": \"前去加速\"\n}]"}},"excerpt":"","more":""}],"Post":[{"title":"flex布局实现及应用","author":"yuansir","top":true,"cover":true,"toc":false,"mathjax":false,"summary":"通过复习flex布局的相关知识，并进行简单应用，以便在项目中更好的去运用flex布局","abbrlink":11,"date":"2023-06-18T13:25:36.000Z","_content":"# flex布局详解及应用\n## 一、flex布局知识点详细介绍\n首先看完官方文档中flex布局的基本知识点[flex布局基本概念](https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox)\n1. 子元素注意点\n- flex-grow 是指项在 flex 容器中分配“剩余空间”的相对比例，默认为0\n- flex-shrink 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值,默认为1\n- flex-basis 指定了 flex 元素在主轴方向上的初始大小(优先级高于width);如果没有分配尺寸，会采用元素内容的尺寸。\n-  Flex 简写形式允许你把三个数值按这个顺序书写 — flex-grow，flex-shrink，flex-basis。\n- flex: initial相当于0 1 auto;flex:auto 相当于1 1 auto;flex:none 相当于 0 0 auto;flex:1 相当于1 1 0 ;flex:2 相当于 2 1 0;\n-   ---\n- align-self: 用于对齐单个flex子项(stretch,flex-end,flex-start,center,baseline,auto)\n- order: 指定单个项目的顺序，默认为0\n2. 父元素注意点\n- align-items:如果子元素没有定义高度，默认会在交叉轴方向拉伸到最高元素的高度。(stretch,flex-end,flex-start,center,baseline)\n- justify-content:(flex-end,flex-start,center,space-between(元素之间间隔相等),space-around(每个元素的左右空间相等))\n- align-content：flex 容器的 height 要大于 flex 项目的可视内容。然后它会将所有的 flex 项目打包成一块之后再对齐剩下的空间。(flex-end,flex-start,center,space-between(元素之间间隔相等),space-around(每个元素的左右空间相等),stretch)\n- gap: 分为row-gap,column-gap 来控制每个子元素之间的间隔，默认为0\n## 二、flex布局应用示例\n1. 水平元素居中\n```javaScript\n  .triangle {\n    border: 1px solid red;\n    width: 500px;\n    height: 400px;\n    margin: 70px auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .d1 {\n    width: 250px;\n    height: 250px;\n    background-color: pink;\n    ;\n  }\n```\n2. 实现圣杯布局（面从上到下，分成三部分：头部（header），躯干（body），尾部（footer）。其中躯干又水平分成三栏：从左到右为：导航、主栏、副栏）\n\n```javaScript\n   .grail {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    text-align: center;\n  }\n\n  .grail div {\n    flex: 1\n  }\n\n  .header,\n  .footer {\n    line-height: 100px;\n    background-color: red;\n  }\n\n  .section {\n    background-color: pink;\n    display: flex;\n  }\n\n  .leftAside,\n  .rightAside {\n    background-color: blue;\n    line-height: 400px;\n  }\n\n  .header,\n  .footer,\n  .leftAside,\n  .rightAside {\n    flex: 0 0 20% !important;\n  }\n```\n   效果展示：\n  ![圣杯布局](https://s2.loli.net/2023/06/21/AhzS6YfE7v2cFGL.png)\n3. 双飞翼布局，就是两端固定宽高，中间自适应的三栏布局。\n\n```javaScript\n    .grail {\n    display: flex;\n    align-items: center;\n    text-align: center;\n    line-height: 400px;\n  }\n\n  .grail div {\n    flex: 1\n  }\n\n  .leftAside,\n  .rightAside {\n    background-color: blue;\n    flex: 0 0 200px !important;\n  }\n\n  .main {\n    background-color: yellow;\n    flex: 1\n  }\n```\n效果展示：\n![双飞翼布局效果图](https://s2.loli.net/2023/06/21/2AslX1C4gwGiVvY.png)\n4. footer底部栏固定\n```javaScript\n  .grail {\n    display: flex;\n    align-items: stretch;\n    flex-direction: column;\n    text-align: center;\n    min-height: 400px;\n  }\n\n  .main {\n    background-color: yellow;\n    flex: 1;\n  }\n\n  .header,\n  .footer {\n    background-color: red;\n  }\n```\n效果展示：\n![底部固定](https://s2.loli.net/2023/06/21/Qpes3LE6H1RxCay.png)\n## 三、各类布局优缺点\n例如：如何实现 高度已知，两端宽度固定，中间自适应？\n1. flex布局\n 优点：css3新特性，简单快捷，目前主流布局方式，解决旧特性定位时产生元素脱离文档流问题。\n缺点：仅支持 IE9 以上浏览器。\n解决方案：自适应div : flex:1\n2. 绝对定位\n优点：简单直接；\n缺点：绝对定位同float布局一样会脱离文档流，高度塌陷问题。\n出现高度塌陷问题，**可创建BFC来解决，**直接给父容器添加 overflow: auto; 或 hidden、scroll等。\n3. float布局\n优点：比较简单，兼容性好；\n缺点：浮动会使元素脱离文档流，容易出现高度塌陷等问题，需做好清理浮动(BFC 块级格式化上下文)。\n解决方式：通过创建BFC来解决这些问题\n（1）float 除了none以外的值\n（2）overflow 除了visible 以外的值（hidden，auto，scroll ）\n（3）display (table-cell，table-caption，inline-block, flex, inline-flex)\n（4）position值为（absolute，fixed）\n（5）fieldset元素\n4. Grid网格布局\n 优点：可将网页划分成不同的网格，任意组合不同布局，可以实现以前只能通过诸如Bootstrapcss第三方框架的布局效果。\n缺点：css 实验性新特性，在浏览器中还没有得到广泛的支持。\n参考教程：[Grid详细讲解](https://link.csdn.net/?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2019%2F03%2Fgrid-layout-tutorial.html)\n","source":"_posts/flex布局实现.md","raw":"---\ntitle: flex布局实现及应用\nauthor: yuansir\ntop: true\ncover: true\ntoc: false\nmathjax: false\nsummary: 通过复习flex布局的相关知识，并进行简单应用，以便在项目中更好的去运用flex布局\ncategories: flex\ntags:\n  - blog\n  - hexo\nabbrlink: 11\ndate: 2023-06-18 21:25:36\n---\n# flex布局详解及应用\n## 一、flex布局知识点详细介绍\n首先看完官方文档中flex布局的基本知识点[flex布局基本概念](https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox)\n1. 子元素注意点\n- flex-grow 是指项在 flex 容器中分配“剩余空间”的相对比例，默认为0\n- flex-shrink 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值,默认为1\n- flex-basis 指定了 flex 元素在主轴方向上的初始大小(优先级高于width);如果没有分配尺寸，会采用元素内容的尺寸。\n-  Flex 简写形式允许你把三个数值按这个顺序书写 — flex-grow，flex-shrink，flex-basis。\n- flex: initial相当于0 1 auto;flex:auto 相当于1 1 auto;flex:none 相当于 0 0 auto;flex:1 相当于1 1 0 ;flex:2 相当于 2 1 0;\n-   ---\n- align-self: 用于对齐单个flex子项(stretch,flex-end,flex-start,center,baseline,auto)\n- order: 指定单个项目的顺序，默认为0\n2. 父元素注意点\n- align-items:如果子元素没有定义高度，默认会在交叉轴方向拉伸到最高元素的高度。(stretch,flex-end,flex-start,center,baseline)\n- justify-content:(flex-end,flex-start,center,space-between(元素之间间隔相等),space-around(每个元素的左右空间相等))\n- align-content：flex 容器的 height 要大于 flex 项目的可视内容。然后它会将所有的 flex 项目打包成一块之后再对齐剩下的空间。(flex-end,flex-start,center,space-between(元素之间间隔相等),space-around(每个元素的左右空间相等),stretch)\n- gap: 分为row-gap,column-gap 来控制每个子元素之间的间隔，默认为0\n## 二、flex布局应用示例\n1. 水平元素居中\n```javaScript\n  .triangle {\n    border: 1px solid red;\n    width: 500px;\n    height: 400px;\n    margin: 70px auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .d1 {\n    width: 250px;\n    height: 250px;\n    background-color: pink;\n    ;\n  }\n```\n2. 实现圣杯布局（面从上到下，分成三部分：头部（header），躯干（body），尾部（footer）。其中躯干又水平分成三栏：从左到右为：导航、主栏、副栏）\n\n```javaScript\n   .grail {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    text-align: center;\n  }\n\n  .grail div {\n    flex: 1\n  }\n\n  .header,\n  .footer {\n    line-height: 100px;\n    background-color: red;\n  }\n\n  .section {\n    background-color: pink;\n    display: flex;\n  }\n\n  .leftAside,\n  .rightAside {\n    background-color: blue;\n    line-height: 400px;\n  }\n\n  .header,\n  .footer,\n  .leftAside,\n  .rightAside {\n    flex: 0 0 20% !important;\n  }\n```\n   效果展示：\n  ![圣杯布局](https://s2.loli.net/2023/06/21/AhzS6YfE7v2cFGL.png)\n3. 双飞翼布局，就是两端固定宽高，中间自适应的三栏布局。\n\n```javaScript\n    .grail {\n    display: flex;\n    align-items: center;\n    text-align: center;\n    line-height: 400px;\n  }\n\n  .grail div {\n    flex: 1\n  }\n\n  .leftAside,\n  .rightAside {\n    background-color: blue;\n    flex: 0 0 200px !important;\n  }\n\n  .main {\n    background-color: yellow;\n    flex: 1\n  }\n```\n效果展示：\n![双飞翼布局效果图](https://s2.loli.net/2023/06/21/2AslX1C4gwGiVvY.png)\n4. footer底部栏固定\n```javaScript\n  .grail {\n    display: flex;\n    align-items: stretch;\n    flex-direction: column;\n    text-align: center;\n    min-height: 400px;\n  }\n\n  .main {\n    background-color: yellow;\n    flex: 1;\n  }\n\n  .header,\n  .footer {\n    background-color: red;\n  }\n```\n效果展示：\n![底部固定](https://s2.loli.net/2023/06/21/Qpes3LE6H1RxCay.png)\n## 三、各类布局优缺点\n例如：如何实现 高度已知，两端宽度固定，中间自适应？\n1. flex布局\n 优点：css3新特性，简单快捷，目前主流布局方式，解决旧特性定位时产生元素脱离文档流问题。\n缺点：仅支持 IE9 以上浏览器。\n解决方案：自适应div : flex:1\n2. 绝对定位\n优点：简单直接；\n缺点：绝对定位同float布局一样会脱离文档流，高度塌陷问题。\n出现高度塌陷问题，**可创建BFC来解决，**直接给父容器添加 overflow: auto; 或 hidden、scroll等。\n3. float布局\n优点：比较简单，兼容性好；\n缺点：浮动会使元素脱离文档流，容易出现高度塌陷等问题，需做好清理浮动(BFC 块级格式化上下文)。\n解决方式：通过创建BFC来解决这些问题\n（1）float 除了none以外的值\n（2）overflow 除了visible 以外的值（hidden，auto，scroll ）\n（3）display (table-cell，table-caption，inline-block, flex, inline-flex)\n（4）position值为（absolute，fixed）\n（5）fieldset元素\n4. Grid网格布局\n 优点：可将网页划分成不同的网格，任意组合不同布局，可以实现以前只能通过诸如Bootstrapcss第三方框架的布局效果。\n缺点：css 实验性新特性，在浏览器中还没有得到广泛的支持。\n参考教程：[Grid详细讲解](https://link.csdn.net/?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2019%2F03%2Fgrid-layout-tutorial.html)\n","slug":"flex布局实现","published":1,"updated":"2023-06-21T06:43:11.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clj5e874h0001vkmu0xp46uuy","content":"<h1 id=\"flex布局详解及应用\"><a href=\"#flex布局详解及应用\" class=\"headerlink\" title=\"flex布局详解及应用\"></a>flex布局详解及应用</h1><h2 id=\"一、flex布局知识点详细介绍\"><a href=\"#一、flex布局知识点详细介绍\" class=\"headerlink\" title=\"一、flex布局知识点详细介绍\"></a>一、flex布局知识点详细介绍</h2><p>首先看完官方文档中flex布局的基本知识点<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\">flex布局基本概念</a></p>\n<ol>\n<li>子元素注意点</li>\n</ol>\n<ul>\n<li>flex-grow 是指项在 flex 容器中分配“剩余空间”的相对比例，默认为0</li>\n<li>flex-shrink 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值,默认为1</li>\n<li>flex-basis 指定了 flex 元素在主轴方向上的初始大小(优先级高于width);如果没有分配尺寸，会采用元素内容的尺寸。</li>\n<li>Flex 简写形式允许你把三个数值按这个顺序书写 — flex-grow，flex-shrink，flex-basis。</li>\n<li>flex: initial相当于0 1 auto;flex:auto 相当于1 1 auto;flex:none 相当于 0 0 auto;flex:1 相当于1 1 0 ;flex:2 相当于 2 1 0;</li>\n</ul>\n<hr>\n<ul>\n<li>align-self: 用于对齐单个flex子项(stretch,flex-end,flex-start,center,baseline,auto)</li>\n<li>order: 指定单个项目的顺序，默认为0</li>\n</ul>\n<ol start=\"2\">\n<li>父元素注意点</li>\n</ol>\n<ul>\n<li>align-items:如果子元素没有定义高度，默认会在交叉轴方向拉伸到最高元素的高度。(stretch,flex-end,flex-start,center,baseline)</li>\n<li>justify-content:(flex-end,flex-start,center,space-between(元素之间间隔相等),space-around(每个元素的左右空间相等))</li>\n<li>align-content：flex 容器的 height 要大于 flex 项目的可视内容。然后它会将所有的 flex 项目打包成一块之后再对齐剩下的空间。(flex-end,flex-start,center,space-between(元素之间间隔相等),space-around(每个元素的左右空间相等),stretch)</li>\n<li>gap: 分为row-gap,column-gap 来控制每个子元素之间的间隔，默认为0</li>\n</ul>\n<h2 id=\"二、flex布局应用示例\"><a href=\"#二、flex布局应用示例\" class=\"headerlink\" title=\"二、flex布局应用示例\"></a>二、flex布局应用示例</h2><ol>\n<li>水平元素居中</li>\n</ol>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">  .triangle &#123;\n    border: 1px solid red;\n    width: 500px;\n    height: 400px;\n    margin: 70px auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  &#125;\n\n  .d1 &#123;\n    width: 250px;\n    height: 250px;\n    background-color: pink;\n    ;\n  &#125;\n</code></pre>\n<ol start=\"2\">\n<li>实现圣杯布局（面从上到下，分成三部分：头部（header），躯干（body），尾部（footer）。其中躯干又水平分成三栏：从左到右为：导航、主栏、副栏）</li>\n</ol>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">   .grail &#123;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    text-align: center;\n  &#125;\n\n  .grail div &#123;\n    flex: 1\n  &#125;\n\n  .header,\n  .footer &#123;\n    line-height: 100px;\n    background-color: red;\n  &#125;\n\n  .section &#123;\n    background-color: pink;\n    display: flex;\n  &#125;\n\n  .leftAside,\n  .rightAside &#123;\n    background-color: blue;\n    line-height: 400px;\n  &#125;\n\n  .header,\n  .footer,\n  .leftAside,\n  .rightAside &#123;\n    flex: 0 0 20% !important;\n  &#125;\n</code></pre>\n<p>   效果展示：<br>  <img src=\"https://s2.loli.net/2023/06/21/AhzS6YfE7v2cFGL.png\" alt=\"圣杯布局\"><br>3. 双飞翼布局，就是两端固定宽高，中间自适应的三栏布局。</p>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">    .grail &#123;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    line-height: 400px;\n  &#125;\n\n  .grail div &#123;\n    flex: 1\n  &#125;\n\n  .leftAside,\n  .rightAside &#123;\n    background-color: blue;\n    flex: 0 0 200px !important;\n  &#125;\n\n  .main &#123;\n    background-color: yellow;\n    flex: 1\n  &#125;\n</code></pre>\n<p>效果展示：<br><img src=\"https://s2.loli.net/2023/06/21/2AslX1C4gwGiVvY.png\" alt=\"双飞翼布局效果图\"><br>4. footer底部栏固定</p>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">  .grail &#123;\n    display: flex;\n    align-items: stretch;\n    flex-direction: column;\n    text-align: center;\n    min-height: 400px;\n  &#125;\n\n  .main &#123;\n    background-color: yellow;\n    flex: 1;\n  &#125;\n\n  .header,\n  .footer &#123;\n    background-color: red;\n  &#125;\n</code></pre>\n<p>效果展示：<br><img src=\"https://s2.loli.net/2023/06/21/Qpes3LE6H1RxCay.png\" alt=\"底部固定\"></p>\n<h2 id=\"三、各类布局优缺点\"><a href=\"#三、各类布局优缺点\" class=\"headerlink\" title=\"三、各类布局优缺点\"></a>三、各类布局优缺点</h2><p>例如：如何实现 高度已知，两端宽度固定，中间自适应？</p>\n<ol>\n<li>flex布局<br> 优点：css3新特性，简单快捷，目前主流布局方式，解决旧特性定位时产生元素脱离文档流问题。<br>缺点：仅支持 IE9 以上浏览器。<br>解决方案：自适应div : flex:1</li>\n<li>绝对定位<br>优点：简单直接；<br>缺点：绝对定位同float布局一样会脱离文档流，高度塌陷问题。<br>出现高度塌陷问题，<strong>可创建BFC来解决，</strong>直接给父容器添加 overflow: auto; 或 hidden、scroll等。</li>\n<li>float布局<br>优点：比较简单，兼容性好；<br>缺点：浮动会使元素脱离文档流，容易出现高度塌陷等问题，需做好清理浮动(BFC 块级格式化上下文)。<br>解决方式：通过创建BFC来解决这些问题<br>（1）float 除了none以外的值<br>（2）overflow 除了visible 以外的值（hidden，auto，scroll ）<br>（3）display (table-cell，table-caption，inline-block, flex, inline-flex)<br>（4）position值为（absolute，fixed）<br>（5）fieldset元素</li>\n<li>Grid网格布局<br> 优点：可将网页划分成不同的网格，任意组合不同布局，可以实现以前只能通过诸如Bootstrapcss第三方框架的布局效果。<br>缺点：css 实验性新特性，在浏览器中还没有得到广泛的支持。<br>参考教程：<a href=\"https://link.csdn.net/?target=http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html\">Grid详细讲解</a></li>\n</ol>\n","site":{"data":{"friends.json":"[ {\n    \"avatar\": \"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2\",\n    \"name\": \"Fabric\",\n    \"introduction\": \"A Blockchain Platform for the Enterprise\",\n    \"url\": \"https://hyperledger-fabric.readthedocs.io/en/master/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"https://www.bootcdn.cn/assets/img/maoyun.svg\",\n    \"name\": \"BootCDN\",\n    \"introduction\": \"稳定、快速、免费的前端开源项目 CDN 加速服务。\",\n    \"url\": \"https://www.bootcdn.cn/\",\n    \"title\": \"前去加速\"\n}]"}},"excerpt":"","more":"<h1 id=\"flex布局详解及应用\"><a href=\"#flex布局详解及应用\" class=\"headerlink\" title=\"flex布局详解及应用\"></a>flex布局详解及应用</h1><h2 id=\"一、flex布局知识点详细介绍\"><a href=\"#一、flex布局知识点详细介绍\" class=\"headerlink\" title=\"一、flex布局知识点详细介绍\"></a>一、flex布局知识点详细介绍</h2><p>首先看完官方文档中flex布局的基本知识点<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\">flex布局基本概念</a></p>\n<ol>\n<li>子元素注意点</li>\n</ol>\n<ul>\n<li>flex-grow 是指项在 flex 容器中分配“剩余空间”的相对比例，默认为0</li>\n<li>flex-shrink 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值,默认为1</li>\n<li>flex-basis 指定了 flex 元素在主轴方向上的初始大小(优先级高于width);如果没有分配尺寸，会采用元素内容的尺寸。</li>\n<li>Flex 简写形式允许你把三个数值按这个顺序书写 — flex-grow，flex-shrink，flex-basis。</li>\n<li>flex: initial相当于0 1 auto;flex:auto 相当于1 1 auto;flex:none 相当于 0 0 auto;flex:1 相当于1 1 0 ;flex:2 相当于 2 1 0;</li>\n</ul>\n<hr>\n<ul>\n<li>align-self: 用于对齐单个flex子项(stretch,flex-end,flex-start,center,baseline,auto)</li>\n<li>order: 指定单个项目的顺序，默认为0</li>\n</ul>\n<ol start=\"2\">\n<li>父元素注意点</li>\n</ol>\n<ul>\n<li>align-items:如果子元素没有定义高度，默认会在交叉轴方向拉伸到最高元素的高度。(stretch,flex-end,flex-start,center,baseline)</li>\n<li>justify-content:(flex-end,flex-start,center,space-between(元素之间间隔相等),space-around(每个元素的左右空间相等))</li>\n<li>align-content：flex 容器的 height 要大于 flex 项目的可视内容。然后它会将所有的 flex 项目打包成一块之后再对齐剩下的空间。(flex-end,flex-start,center,space-between(元素之间间隔相等),space-around(每个元素的左右空间相等),stretch)</li>\n<li>gap: 分为row-gap,column-gap 来控制每个子元素之间的间隔，默认为0</li>\n</ul>\n<h2 id=\"二、flex布局应用示例\"><a href=\"#二、flex布局应用示例\" class=\"headerlink\" title=\"二、flex布局应用示例\"></a>二、flex布局应用示例</h2><ol>\n<li>水平元素居中</li>\n</ol>\n<pre><code class=\"javaScript\">  .triangle &#123;\n    border: 1px solid red;\n    width: 500px;\n    height: 400px;\n    margin: 70px auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  &#125;\n\n  .d1 &#123;\n    width: 250px;\n    height: 250px;\n    background-color: pink;\n    ;\n  &#125;\n</code></pre>\n<ol start=\"2\">\n<li>实现圣杯布局（面从上到下，分成三部分：头部（header），躯干（body），尾部（footer）。其中躯干又水平分成三栏：从左到右为：导航、主栏、副栏）</li>\n</ol>\n<pre><code class=\"javaScript\">   .grail &#123;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    text-align: center;\n  &#125;\n\n  .grail div &#123;\n    flex: 1\n  &#125;\n\n  .header,\n  .footer &#123;\n    line-height: 100px;\n    background-color: red;\n  &#125;\n\n  .section &#123;\n    background-color: pink;\n    display: flex;\n  &#125;\n\n  .leftAside,\n  .rightAside &#123;\n    background-color: blue;\n    line-height: 400px;\n  &#125;\n\n  .header,\n  .footer,\n  .leftAside,\n  .rightAside &#123;\n    flex: 0 0 20% !important;\n  &#125;\n</code></pre>\n<p>   效果展示：<br>  <img src=\"https://s2.loli.net/2023/06/21/AhzS6YfE7v2cFGL.png\" alt=\"圣杯布局\"><br>3. 双飞翼布局，就是两端固定宽高，中间自适应的三栏布局。</p>\n<pre><code class=\"javaScript\">    .grail &#123;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    line-height: 400px;\n  &#125;\n\n  .grail div &#123;\n    flex: 1\n  &#125;\n\n  .leftAside,\n  .rightAside &#123;\n    background-color: blue;\n    flex: 0 0 200px !important;\n  &#125;\n\n  .main &#123;\n    background-color: yellow;\n    flex: 1\n  &#125;\n</code></pre>\n<p>效果展示：<br><img src=\"https://s2.loli.net/2023/06/21/2AslX1C4gwGiVvY.png\" alt=\"双飞翼布局效果图\"><br>4. footer底部栏固定</p>\n<pre><code class=\"javaScript\">  .grail &#123;\n    display: flex;\n    align-items: stretch;\n    flex-direction: column;\n    text-align: center;\n    min-height: 400px;\n  &#125;\n\n  .main &#123;\n    background-color: yellow;\n    flex: 1;\n  &#125;\n\n  .header,\n  .footer &#123;\n    background-color: red;\n  &#125;\n</code></pre>\n<p>效果展示：<br><img src=\"https://s2.loli.net/2023/06/21/Qpes3LE6H1RxCay.png\" alt=\"底部固定\"></p>\n<h2 id=\"三、各类布局优缺点\"><a href=\"#三、各类布局优缺点\" class=\"headerlink\" title=\"三、各类布局优缺点\"></a>三、各类布局优缺点</h2><p>例如：如何实现 高度已知，两端宽度固定，中间自适应？</p>\n<ol>\n<li>flex布局<br> 优点：css3新特性，简单快捷，目前主流布局方式，解决旧特性定位时产生元素脱离文档流问题。<br>缺点：仅支持 IE9 以上浏览器。<br>解决方案：自适应div : flex:1</li>\n<li>绝对定位<br>优点：简单直接；<br>缺点：绝对定位同float布局一样会脱离文档流，高度塌陷问题。<br>出现高度塌陷问题，<strong>可创建BFC来解决，</strong>直接给父容器添加 overflow: auto; 或 hidden、scroll等。</li>\n<li>float布局<br>优点：比较简单，兼容性好；<br>缺点：浮动会使元素脱离文档流，容易出现高度塌陷等问题，需做好清理浮动(BFC 块级格式化上下文)。<br>解决方式：通过创建BFC来解决这些问题<br>（1）float 除了none以外的值<br>（2）overflow 除了visible 以外的值（hidden，auto，scroll ）<br>（3）display (table-cell，table-caption，inline-block, flex, inline-flex)<br>（4）position值为（absolute，fixed）<br>（5）fieldset元素</li>\n<li>Grid网格布局<br> 优点：可将网页划分成不同的网格，任意组合不同布局，可以实现以前只能通过诸如Bootstrapcss第三方框架的布局效果。<br>缺点：css 实验性新特性，在浏览器中还没有得到广泛的支持。<br>参考教程：<a href=\"https://link.csdn.net/?target=http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html\">Grid详细讲解</a></li>\n</ol>\n"},{"title":"Hello World","abbrlink":16107,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nabbrlink: 16107\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-06-21T00:58:09.748Z","updated":"2023-06-21T02:03:23.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clj5e874n0003vkmu9roigsu4","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span>\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo generate\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"friends.json":"[ {\n    \"avatar\": \"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2\",\n    \"name\": \"Fabric\",\n    \"introduction\": \"A Blockchain Platform for the Enterprise\",\n    \"url\": \"https://hyperledger-fabric.readthedocs.io/en/master/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"https://www.bootcdn.cn/assets/img/maoyun.svg\",\n    \"name\": \"BootCDN\",\n    \"introduction\": \"稳定、快速、免费的前端开源项目 CDN 加速服务。\",\n    \"url\": \"https://www.bootcdn.cn/\",\n    \"title\": \"前去加速\"\n}]"}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre><code class=\"bash\">$ hexo new &quot;My New Post&quot;\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre><code class=\"bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre><code class=\"bash\">$ hexo generate\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre><code class=\"bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"牛客JS中等难度编程题解析总结","author":"yuansir","top":true,"cover":true,"toc":false,"mathjax":false,"summary":"通过从牛客编程的刷题过程中，查缺补漏，理解相关编程题所设计到的知识点，并以此篇记录学习所得。","abbrlink":34537,"date":"2023-06-16T12:25:36.000Z","_content":"# 牛客JS编程题（中等难度）\n## 1.输出实现直角三角形(JS1)\n（1）解法1，封装成一个函数，利用循环+repeat来解\n```javascript\n    var triangle = document.querySelector('.triangle');\n    function rightAngle(s, n) {\n      let str = ''\n      for (let i = 1; i <= n; i++) {\n        //repeat(n) 重复复制一个字符串n次\n        str += s.repeat(i) + `<br>`\n      }\n      return str\n    }\n    triangle.innerHTML = rightAngle('*', 3)\n\n```\n（2）解法2. 直接写死输出\n```javascript\n      var triangle = document.querySelector('.triangle');\n      // 补全代码\n      triangle.innerHTML=`*<br>**<br>***`\n```\n（3）解法3. 利用双层for循环来解\n```javascript\n     var triangle = document.querySelector('.triangle');\n    // 补全代码\n    function rightAngle(s, n) {\n      let str = ''\n      for (let i = 1; i <= n; i++) {\n        let word = ''\n        for (let j = 0; j < i; j++) {\n          word += s\n        }\n        str += word + `<br>`\n      }\n      return str\n    }\n    triangle.innerHTML = rightAngle('*', 4)\n```\n## 2.指定数组范围，随机输出一个无重复数组(JS7)\n（1）解法1. 用random生成随机数字，利用indexOf判断数组中是否存在\n - indexOf():该方法返回给定元素能找在数组中找到的第一个索引值，否则返回-1；\n - includes():该方法返回 true or false  来判断数组中是否存在，可以检测NaN, 缺点低版本浏览器支持不是很友好\n - some():用于检测是否有满足条件的元素，有，就不继续检测后面的元素，直接返回true,如果都不符合，返回false\n  ```javascript\n   let arr = [100,20,50,58,6,69,5]\n      // some\n      let result = arr.some(e => e === 20) //true\n      if (result) {\n      //do something...\n      };\n  ```\n  - find():它的参数是一个回调函数，所有数组元素依次遍历该回调函数，直到找出第一个返回值为true的元素，然后返回该元素，否则返回undefined。\n  ```javascript\n   let arr = [100,20,50,58,6,69,5]\n      // some\n      let result = arr.find((index,value,arr) => {if(value===20)}) //true\n      if (result) {\n      //do something...\n      };\n  ```\n ***\n```javascript\n  function getUniqueNum(num1, num2, len) {\n      let arr = []\n      while (arr.length !== len) {\n        //math.random()要利用floor,ceil进行取整\n        // 需要[n， m):  Math.floor(Math.random() * (m - n)) + n;\n        // 需要[n， m]:   Math.floor(Math.random() * (m - n + 1)) + n;\n        // 解释：Math.random() * (m - n + 1) 的取值为[0, m - n + 1)， 再加n就是[n, m + 1)， 但这样就可能取到(m, m + 1) 的数， 所以向下取整。\n        let num = Math.floor(Math.random() * (num2 - num1 + 1) + num1)\n\n        if (arr.indexOf(num) === -1) {\n          arr.push(num)\n        }\n      }\n      return arr\n    }\n```\n（2）解法2.利用set唯一值特性去除\n> [set教程详解](https://juejin.cn/post/7154195061734375437)\n```javascript\n   function getUniqueNum(num1, num2, len) {\n      let arr = new Set()\n      while (arr.size !== len) {\n        let num = Math.floor(Math.random() * (num2 - num1 + 1) + num1)\n        arr.add(num)\n      }\n      //注意要将set集合转换为数组\n      //可以利用 扩展运算符...，Array.from(),通过遍历set将每个元素加入到数组当中\n      return [...arr]\n    }\n```\n## 3.数组扁平化处理(JS20)\n（1）解法1.通过判断数组中每个元素是否是数组，递归处理\n- instanceof运算符用于检验构造函数的prototype属性是否出现在对象的原型链中的任何位置，返回一个布尔值。``let a = [];\na instanceof Array; //true``\n- 实例的构造函数属性constructor指向构造函数，那么通过constructor属性也可以判断是否为一个数组。`` let a = [1,3,4];\na.constructor === Array;//true``\n-  Object.prototype.toString().call()可以获取到对象的不同类型，而且也可以检验是否为数组，比如是否是一个函数，是否是数字等等\n  ```javascript\n  let a = [1,2,3]\nObject.prototype.toString.call(a) === '[object Array]';//true\n//检验是否是函数\nlet a = function () {};\nObject.prototype.toString.call(a) === '[object Function]';//true\n//检验是否是数字\nlet b = 1;\nObject.prototype.toString.call(a) === '[object Number]';//true\n\n  ```\n- Array.isArray() 用于确定传递的值是否是一个数组，返回一个布尔值。``\n let a = [1,2,3]\nArray.isArray(a);//true ``\n---\n```javascript\n    function flatten(arr) {\n      //如果传入的不是数组元素\n      if (!Array.isArray(arr)) return\n       let newArr = []\n      arr.forEach(item => {\n        if (!Array.isArray(item)) {\n          newArr.push(item)\n        } else {\n          newArr=newArr.concat(flatten(item))\n        }\n      })\n      return newArr\n    }\n```\n（2）解法2.toString和split结合\n```javaScript\n    function flatten(arr) {\n      let result = [];\n      result = arr.toString() // 1,2,3,4,1\n      result = result.split(',') // ['1', '2', '3', '4', '1']\n      result = result.map(Number) // [1, 2, 3, 4, 1]\n      return result  //可以将三者合并成一句，此处仅为展示响应结果\n    }\n ```\n （3）解法3.用reduce方法累加实现（跟递归相似），reduce方法可缓存一个变量，迭代时我们可以操作这个变量，然后返回它。\n```javaScript\n   function flatten(arr) {\n      return arr.reduce((pre, next) => {\n        if (Array.isArray(next)) {\n          return pre.concat(flatten(next))\n        } else {\n          return pre.concat(next)\n        }\n      }, [])}\n ```\n  （4）解法4. 扩展运算符+some实现\n```javaScript\n    function flatten(arr) {\n      while (arr.some(item =>\n          Array.isArray(item)\n        )) {\n        arr = [].concat(...arr)\n      }\n      return arr\n    }\n ```\n  （5）解法5. ES6的flat方法，flat() 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。默认为1层，参数depth也可以传进 Infinity，代表不论多少层都要展开。\n```javaScript\n    function flatten(arr) {\n      return arr.flat(Infinity)\n    }\n ```\n## 4.时间格式化输出(JS47)\n  （1）解法1. toLocaleString()方法实现\n- 输出2019-09-27 16:23:21  ``new Date().toLocaleString('zh', { hour12: false }).replaceAll('/', '-')\n``\n- 输出 2019-09-27 ``new Date().toLocaleDateString('zh').replaceAll('/', '-')\n``\n- 16:23:21  ``new Date().toLocaleTimeString('zh', { hour12: false })\n``\n```javaScript\n    var t = 1521694261 // 该变量为时间戳，，即自从 Unix 纪元（格林威治时间 1970 年 1 月 1 日 00:00:00）到当前时间的秒数\n    function formatDate(data) {\n      return new Date(data).toLocaleString('zh', {\n        hour12: false\n      }).replaceAll('/', '-')\n    }\n ```\n   （2）解法2. 传统方法实现\n- new Date([params]) 注意，如果传参，都是将其转换为中国标准时间来进行处理\n> [new Date([params])传参讲解](https://blog.csdn.net/huawuque004/article/details/81739442#:~:text=JavaScript%E4%B8%8B%EF%BC%8Cnew%20Date%20%28%5Bparams%5D%29%2C%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%9C%89%E4%BB%A5%E4%B8%8B%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%201%E3%80%81new%20Date%20%28%22month%20dd%2Cyyyy%20hh%3Amm%3Ass%22%29%3B,Date%20%28yyyy%2Cmth%2Cdd%2Chh%2Cmm%2Css%29%3B%20%E6%B3%A8%E6%84%8F%EF%BC%9A%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E4%B8%8B%EF%BC%8C%E5%BF%85%E9%A1%BB%E4%BC%A0%E9%80%92%20%E6%95%B4%E5%9E%8B%20%EF%BC%9B%204%E3%80%81new%20Date%20%28yyyy%2Cmth%2Cdd%29%3B)\n```javaScript\n    const timestamp = 1521694261 * 1000 //注意如果要传入时间戳形式，要记得乘以1000，因为该函数会默认为传递的是毫秒数\n    function currentTime(val) {\n      const date = new Date(val) //如果val为空，此时date时间格式为Mon Jun 19 2023 08:53:48 GMT+0800 (中国标准时间)\n      const zeroFill = function (value) {\n        if (value < 10) {\n          value = '0' + value\n        }\n        return value\n      }\n      //输出标准时间格式2014-09-05 13:14:20\n      const year = date.getFullYear(); //年\n      const month = zeroFill(date.getMonth() + 1); //月\n      const day = zeroFill(date.getDate()); //日\n      const hh = zeroFill(date.getHours()); //时\n      const mm = zeroFill(date.getMinutes()); //分\n      const ss = zeroFill(date.getSeconds()); //秒\n    //  const w = function () {\n    //     arr = ['日', '一', '二', '三', '四', '五', '六']\n    //     return arr[date.getDay()]\n    //   }()\n      return (`${year}-${month}-${day} ${hh}:${mm}:${ss} `)\n      // return (`${year}-${month}-${day} ${hh}:${mm}:${ss} 星期${w}`) //标准时间回后面加上星期几\n      //输出简洁时间格式\n      // const year = date.getFullYear()% 100,; //年\n      // const month =date.getMonth() + 1; //月\n      // const day = date.getDate(); //日\n      // const hh = date.getHours(); //时\n      // const mm = date.getMinutes(); //分\n      // const ss = date.getSeconds(); //秒\n      // return (`${year}-${month}-${day} ${hh}:${mm}:${ss}`)\n    }\n    currentTime(timestamp)\n ```\n  （2）解法3. 通过引入第三方库(moment)来实现\n- 安装moment.js\n```javaScript\n npm install moment\n```\n- 导入moment.js模块（main.js）\n```javaScript\n    import moment from 'moment';\n    Vue.prototype.$moment = moment\n```\n- 格式化时间\n```javaScript\n// `this.$moment()` 输出当前时间的moment对象\nconsole.log(this.$moment().format('YYYY-MM-DD HH:mm:ss')); // 2023-05-29 00:30:19\n\n```\n","source":"_posts/基础编程题(一).md","raw":"---\ntitle: 牛客JS中等难度编程题解析总结\nauthor: yuansir\ntop: true\ncover: true\ntoc: false\nmathjax: false\nsummary: 通过从牛客编程的刷题过程中，查缺补漏，理解相关编程题所设计到的知识点，并以此篇记录学习所得。\ncategories: 编程学习总结\ntags:\n  - blog\n  - hexo\nabbrlink: 34537\ndate: 2023-06-16 20:25:36\n---\n# 牛客JS编程题（中等难度）\n## 1.输出实现直角三角形(JS1)\n（1）解法1，封装成一个函数，利用循环+repeat来解\n```javascript\n    var triangle = document.querySelector('.triangle');\n    function rightAngle(s, n) {\n      let str = ''\n      for (let i = 1; i <= n; i++) {\n        //repeat(n) 重复复制一个字符串n次\n        str += s.repeat(i) + `<br>`\n      }\n      return str\n    }\n    triangle.innerHTML = rightAngle('*', 3)\n\n```\n（2）解法2. 直接写死输出\n```javascript\n      var triangle = document.querySelector('.triangle');\n      // 补全代码\n      triangle.innerHTML=`*<br>**<br>***`\n```\n（3）解法3. 利用双层for循环来解\n```javascript\n     var triangle = document.querySelector('.triangle');\n    // 补全代码\n    function rightAngle(s, n) {\n      let str = ''\n      for (let i = 1; i <= n; i++) {\n        let word = ''\n        for (let j = 0; j < i; j++) {\n          word += s\n        }\n        str += word + `<br>`\n      }\n      return str\n    }\n    triangle.innerHTML = rightAngle('*', 4)\n```\n## 2.指定数组范围，随机输出一个无重复数组(JS7)\n（1）解法1. 用random生成随机数字，利用indexOf判断数组中是否存在\n - indexOf():该方法返回给定元素能找在数组中找到的第一个索引值，否则返回-1；\n - includes():该方法返回 true or false  来判断数组中是否存在，可以检测NaN, 缺点低版本浏览器支持不是很友好\n - some():用于检测是否有满足条件的元素，有，就不继续检测后面的元素，直接返回true,如果都不符合，返回false\n  ```javascript\n   let arr = [100,20,50,58,6,69,5]\n      // some\n      let result = arr.some(e => e === 20) //true\n      if (result) {\n      //do something...\n      };\n  ```\n  - find():它的参数是一个回调函数，所有数组元素依次遍历该回调函数，直到找出第一个返回值为true的元素，然后返回该元素，否则返回undefined。\n  ```javascript\n   let arr = [100,20,50,58,6,69,5]\n      // some\n      let result = arr.find((index,value,arr) => {if(value===20)}) //true\n      if (result) {\n      //do something...\n      };\n  ```\n ***\n```javascript\n  function getUniqueNum(num1, num2, len) {\n      let arr = []\n      while (arr.length !== len) {\n        //math.random()要利用floor,ceil进行取整\n        // 需要[n， m):  Math.floor(Math.random() * (m - n)) + n;\n        // 需要[n， m]:   Math.floor(Math.random() * (m - n + 1)) + n;\n        // 解释：Math.random() * (m - n + 1) 的取值为[0, m - n + 1)， 再加n就是[n, m + 1)， 但这样就可能取到(m, m + 1) 的数， 所以向下取整。\n        let num = Math.floor(Math.random() * (num2 - num1 + 1) + num1)\n\n        if (arr.indexOf(num) === -1) {\n          arr.push(num)\n        }\n      }\n      return arr\n    }\n```\n（2）解法2.利用set唯一值特性去除\n> [set教程详解](https://juejin.cn/post/7154195061734375437)\n```javascript\n   function getUniqueNum(num1, num2, len) {\n      let arr = new Set()\n      while (arr.size !== len) {\n        let num = Math.floor(Math.random() * (num2 - num1 + 1) + num1)\n        arr.add(num)\n      }\n      //注意要将set集合转换为数组\n      //可以利用 扩展运算符...，Array.from(),通过遍历set将每个元素加入到数组当中\n      return [...arr]\n    }\n```\n## 3.数组扁平化处理(JS20)\n（1）解法1.通过判断数组中每个元素是否是数组，递归处理\n- instanceof运算符用于检验构造函数的prototype属性是否出现在对象的原型链中的任何位置，返回一个布尔值。``let a = [];\na instanceof Array; //true``\n- 实例的构造函数属性constructor指向构造函数，那么通过constructor属性也可以判断是否为一个数组。`` let a = [1,3,4];\na.constructor === Array;//true``\n-  Object.prototype.toString().call()可以获取到对象的不同类型，而且也可以检验是否为数组，比如是否是一个函数，是否是数字等等\n  ```javascript\n  let a = [1,2,3]\nObject.prototype.toString.call(a) === '[object Array]';//true\n//检验是否是函数\nlet a = function () {};\nObject.prototype.toString.call(a) === '[object Function]';//true\n//检验是否是数字\nlet b = 1;\nObject.prototype.toString.call(a) === '[object Number]';//true\n\n  ```\n- Array.isArray() 用于确定传递的值是否是一个数组，返回一个布尔值。``\n let a = [1,2,3]\nArray.isArray(a);//true ``\n---\n```javascript\n    function flatten(arr) {\n      //如果传入的不是数组元素\n      if (!Array.isArray(arr)) return\n       let newArr = []\n      arr.forEach(item => {\n        if (!Array.isArray(item)) {\n          newArr.push(item)\n        } else {\n          newArr=newArr.concat(flatten(item))\n        }\n      })\n      return newArr\n    }\n```\n（2）解法2.toString和split结合\n```javaScript\n    function flatten(arr) {\n      let result = [];\n      result = arr.toString() // 1,2,3,4,1\n      result = result.split(',') // ['1', '2', '3', '4', '1']\n      result = result.map(Number) // [1, 2, 3, 4, 1]\n      return result  //可以将三者合并成一句，此处仅为展示响应结果\n    }\n ```\n （3）解法3.用reduce方法累加实现（跟递归相似），reduce方法可缓存一个变量，迭代时我们可以操作这个变量，然后返回它。\n```javaScript\n   function flatten(arr) {\n      return arr.reduce((pre, next) => {\n        if (Array.isArray(next)) {\n          return pre.concat(flatten(next))\n        } else {\n          return pre.concat(next)\n        }\n      }, [])}\n ```\n  （4）解法4. 扩展运算符+some实现\n```javaScript\n    function flatten(arr) {\n      while (arr.some(item =>\n          Array.isArray(item)\n        )) {\n        arr = [].concat(...arr)\n      }\n      return arr\n    }\n ```\n  （5）解法5. ES6的flat方法，flat() 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。默认为1层，参数depth也可以传进 Infinity，代表不论多少层都要展开。\n```javaScript\n    function flatten(arr) {\n      return arr.flat(Infinity)\n    }\n ```\n## 4.时间格式化输出(JS47)\n  （1）解法1. toLocaleString()方法实现\n- 输出2019-09-27 16:23:21  ``new Date().toLocaleString('zh', { hour12: false }).replaceAll('/', '-')\n``\n- 输出 2019-09-27 ``new Date().toLocaleDateString('zh').replaceAll('/', '-')\n``\n- 16:23:21  ``new Date().toLocaleTimeString('zh', { hour12: false })\n``\n```javaScript\n    var t = 1521694261 // 该变量为时间戳，，即自从 Unix 纪元（格林威治时间 1970 年 1 月 1 日 00:00:00）到当前时间的秒数\n    function formatDate(data) {\n      return new Date(data).toLocaleString('zh', {\n        hour12: false\n      }).replaceAll('/', '-')\n    }\n ```\n   （2）解法2. 传统方法实现\n- new Date([params]) 注意，如果传参，都是将其转换为中国标准时间来进行处理\n> [new Date([params])传参讲解](https://blog.csdn.net/huawuque004/article/details/81739442#:~:text=JavaScript%E4%B8%8B%EF%BC%8Cnew%20Date%20%28%5Bparams%5D%29%2C%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%9C%89%E4%BB%A5%E4%B8%8B%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%201%E3%80%81new%20Date%20%28%22month%20dd%2Cyyyy%20hh%3Amm%3Ass%22%29%3B,Date%20%28yyyy%2Cmth%2Cdd%2Chh%2Cmm%2Css%29%3B%20%E6%B3%A8%E6%84%8F%EF%BC%9A%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E4%B8%8B%EF%BC%8C%E5%BF%85%E9%A1%BB%E4%BC%A0%E9%80%92%20%E6%95%B4%E5%9E%8B%20%EF%BC%9B%204%E3%80%81new%20Date%20%28yyyy%2Cmth%2Cdd%29%3B)\n```javaScript\n    const timestamp = 1521694261 * 1000 //注意如果要传入时间戳形式，要记得乘以1000，因为该函数会默认为传递的是毫秒数\n    function currentTime(val) {\n      const date = new Date(val) //如果val为空，此时date时间格式为Mon Jun 19 2023 08:53:48 GMT+0800 (中国标准时间)\n      const zeroFill = function (value) {\n        if (value < 10) {\n          value = '0' + value\n        }\n        return value\n      }\n      //输出标准时间格式2014-09-05 13:14:20\n      const year = date.getFullYear(); //年\n      const month = zeroFill(date.getMonth() + 1); //月\n      const day = zeroFill(date.getDate()); //日\n      const hh = zeroFill(date.getHours()); //时\n      const mm = zeroFill(date.getMinutes()); //分\n      const ss = zeroFill(date.getSeconds()); //秒\n    //  const w = function () {\n    //     arr = ['日', '一', '二', '三', '四', '五', '六']\n    //     return arr[date.getDay()]\n    //   }()\n      return (`${year}-${month}-${day} ${hh}:${mm}:${ss} `)\n      // return (`${year}-${month}-${day} ${hh}:${mm}:${ss} 星期${w}`) //标准时间回后面加上星期几\n      //输出简洁时间格式\n      // const year = date.getFullYear()% 100,; //年\n      // const month =date.getMonth() + 1; //月\n      // const day = date.getDate(); //日\n      // const hh = date.getHours(); //时\n      // const mm = date.getMinutes(); //分\n      // const ss = date.getSeconds(); //秒\n      // return (`${year}-${month}-${day} ${hh}:${mm}:${ss}`)\n    }\n    currentTime(timestamp)\n ```\n  （2）解法3. 通过引入第三方库(moment)来实现\n- 安装moment.js\n```javaScript\n npm install moment\n```\n- 导入moment.js模块（main.js）\n```javaScript\n    import moment from 'moment';\n    Vue.prototype.$moment = moment\n```\n- 格式化时间\n```javaScript\n// `this.$moment()` 输出当前时间的moment对象\nconsole.log(this.$moment().format('YYYY-MM-DD HH:mm:ss')); // 2023-05-29 00:30:19\n\n```\n","slug":"基础编程题(一)","published":1,"updated":"2023-06-21T02:55:11.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clj5e874u0007vkmu1vf3bc2z","content":"<h1 id=\"牛客JS编程题（中等难度）\"><a href=\"#牛客JS编程题（中等难度）\" class=\"headerlink\" title=\"牛客JS编程题（中等难度）\"></a>牛客JS编程题（中等难度）</h1><h2 id=\"1-输出实现直角三角形-JS1\"><a href=\"#1-输出实现直角三角形-JS1\" class=\"headerlink\" title=\"1.输出实现直角三角形(JS1)\"></a>1.输出实现直角三角形(JS1)</h2><p>（1）解法1，封装成一个函数，利用循环+repeat来解</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">var</span> triangle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.triangle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">rightAngle</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//repeat(n) 重复复制一个字符串n次</span>\n        str <span class=\"token operator\">+</span><span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token template-string\"><span class=\"token string\">`&lt;br>`</span></span>\n      <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> str\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    triangle<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">rightAngle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>（2）解法2. 直接写死输出</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">      <span class=\"token keyword\">var</span> triangle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.triangle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">// 补全代码</span>\n      triangle<span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token string\">`*&lt;br>**&lt;br>***`</span></span>\n</code></pre>\n<p>（3）解法3. 利用双层for循环来解</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">     <span class=\"token keyword\">var</span> triangle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.triangle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 补全代码</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">rightAngle</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> word <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n          word <span class=\"token operator\">+</span><span class=\"token operator\">=</span> s\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        str <span class=\"token operator\">+</span><span class=\"token operator\">=</span> word <span class=\"token operator\">+</span> <span class=\"token template-string\"><span class=\"token string\">`&lt;br>`</span></span>\n      <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> str\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    triangle<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">rightAngle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"2-指定数组范围，随机输出一个无重复数组-JS7\"><a href=\"#2-指定数组范围，随机输出一个无重复数组-JS7\" class=\"headerlink\" title=\"2.指定数组范围，随机输出一个无重复数组(JS7)\"></a>2.指定数组范围，随机输出一个无重复数组(JS7)</h2><p>（1）解法1. 用random生成随机数字，利用indexOf判断数组中是否存在</p>\n<ul>\n<li>indexOf():该方法返回给定元素能找在数组中找到的第一个索引值，否则返回-1；</li>\n<li>includes():该方法返回 true or false  来判断数组中是否存在，可以检测NaN, 缺点低版本浏览器支持不是很友好</li>\n<li>some():用于检测是否有满足条件的元素，有，就不继续检测后面的元素，直接返回true,如果都不符合，返回false</li>\n</ul>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\">// some</span>\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span><span class=\"token operator\">></span> e <span class=\"token operator\">===</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">//true</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//do something...</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul>\n<li>find():它的参数是一个回调函数，所有数组元素依次遍历该回调函数，直到找出第一个返回值为true的元素，然后返回该元素，否则返回undefined。</li>\n</ul>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\">// some</span>\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">===</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">//true</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//do something...</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">getUniqueNum</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> len<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//math.random()要利用floor,ceil进行取整</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 需要[n， m):  Math.floor(Math.random() * (m - n)) + n;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 需要[n， m]:   Math.floor(Math.random() * (m - n + 1)) + n;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 解释：Math.random() * (m - n + 1) 的取值为[0, m - n + 1)， 再加n就是[n, m + 1)， 但这样就可能取到(m, m + 1) 的数， 所以向下取整。</span>\n        <span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>num2 <span class=\"token operator\">-</span> num1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num1<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n          arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> arr\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>（2）解法2.利用set唯一值特性去除</p>\n<blockquote>\n<p><a href=\"https://juejin.cn/post/7154195061734375437\">set教程详解</a></p>\n</blockquote>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">   <span class=\"token keyword\">function</span> <span class=\"token function\">getUniqueNum</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>size <span class=\"token operator\">!==</span> len<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>num2 <span class=\"token operator\">-</span> num1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num1<span class=\"token punctuation\">)</span>\n        arr<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">//注意要将set集合转换为数组</span>\n      <span class=\"token comment\" spellcheck=\"true\">//可以利用 扩展运算符...，Array.from(),通过遍历set将每个元素加入到数组当中</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">]</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"3-数组扁平化处理-JS20\"><a href=\"#3-数组扁平化处理-JS20\" class=\"headerlink\" title=\"3.数组扁平化处理(JS20)\"></a>3.数组扁平化处理(JS20)</h2><p>（1）解法1.通过判断数组中每个元素是否是数组，递归处理</p>\n<ul>\n<li>instanceof运算符用于检验构造函数的prototype属性是否出现在对象的原型链中的任何位置，返回一个布尔值。<code>let a = []; a instanceof Array; //true</code></li>\n<li>实例的构造函数属性constructor指向构造函数，那么通过constructor属性也可以判断是否为一个数组。<code> let a = [1,3,4]; a.constructor === Array;//true</code></li>\n<li>Object.prototype.toString().call()可以获取到对象的不同类型，而且也可以检验是否为数组，比如是否是一个函数，是否是数字等等</li>\n</ul>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nObject<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'[object Array]'</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//true</span>\n<span class=\"token comment\" spellcheck=\"true\">//检验是否是函数</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'[object Function]'</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//true</span>\n<span class=\"token comment\" spellcheck=\"true\">//检验是否是数字</span>\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'[object Number]'</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//true</span>\n</code></pre>\n<ul>\n<li>Array.isArray() 用于确定传递的值是否是一个数组，返回一个布尔值。<code> let a = [1,2,3] Array.isArray(a);//true</code></li>\n</ul>\n<hr>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">function</span> <span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">//如果传入的不是数组元素</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n       <span class=\"token keyword\">let</span> newArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      arr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n          newArr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n          newArr<span class=\"token operator\">=</span>newArr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> newArr\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>（2）解法2.toString和split结合</p>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">    function flatten(arr) &#123;\n      let result = [];\n      result = arr.toString() // 1,2,3,4,1\n      result = result.split(',') // ['1', '2', '3', '4', '1']\n      result = result.map(Number) // [1, 2, 3, 4, 1]\n      return result  //可以将三者合并成一句，此处仅为展示响应结果\n    &#125;\n</code></pre>\n<p> （3）解法3.用reduce方法累加实现（跟递归相似），reduce方法可缓存一个变量，迭代时我们可以操作这个变量，然后返回它。</p>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">   function flatten(arr) &#123;\n      return arr.reduce((pre, next) => &#123;\n        if (Array.isArray(next)) &#123;\n          return pre.concat(flatten(next))\n        &#125; else &#123;\n          return pre.concat(next)\n        &#125;\n      &#125;, [])&#125;\n</code></pre>\n<p>  （4）解法4. 扩展运算符+some实现</p>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">    function flatten(arr) &#123;\n      while (arr.some(item =>\n          Array.isArray(item)\n        )) &#123;\n        arr = [].concat(...arr)\n      &#125;\n      return arr\n    &#125;\n</code></pre>\n<p>  （5）解法5. ES6的flat方法，flat() 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。默认为1层，参数depth也可以传进 Infinity，代表不论多少层都要展开。</p>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">    function flatten(arr) &#123;\n      return arr.flat(Infinity)\n    &#125;\n</code></pre>\n<h2 id=\"4-时间格式化输出-JS47\"><a href=\"#4-时间格式化输出-JS47\" class=\"headerlink\" title=\"4.时间格式化输出(JS47)\"></a>4.时间格式化输出(JS47)</h2><p>  （1）解法1. toLocaleString()方法实现</p>\n<ul>\n<li>输出2019-09-27 16:23:21  <code>new Date().toLocaleString(&#39;zh&#39;, &#123; hour12: false &#125;).replaceAll(&#39;/&#39;, &#39;-&#39;) </code></li>\n<li>输出 2019-09-27 <code>new Date().toLocaleDateString(&#39;zh&#39;).replaceAll(&#39;/&#39;, &#39;-&#39;) </code></li>\n<li>16:23:21  <code>new Date().toLocaleTimeString(&#39;zh&#39;, &#123; hour12: false &#125;) </code></li>\n</ul>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">    var t = 1521694261 // 该变量为时间戳，，即自从 Unix 纪元（格林威治时间 1970 年 1 月 1 日 00:00:00）到当前时间的秒数\n    function formatDate(data) &#123;\n      return new Date(data).toLocaleString('zh', &#123;\n        hour12: false\n      &#125;).replaceAll('/', '-')\n    &#125;\n</code></pre>\n<p>   （2）解法2. 传统方法实现</p>\n<ul>\n<li>new Date([params]) 注意，如果传参，都是将其转换为中国标准时间来进行处理<blockquote>\n<p><a href=\"https://blog.csdn.net/huawuque004/article/details/81739442#:~:text=JavaScript%E4%B8%8B%EF%BC%8Cnew%20Date%20%28%5Bparams%5D%29%2C%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%9C%89%E4%BB%A5%E4%B8%8B%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%201%E3%80%81new%20Date%20%28%22month%20dd%2Cyyyy%20hh%3Amm%3Ass%22%29%3B,Date%20%28yyyy%2Cmth%2Cdd%2Chh%2Cmm%2Css%29%3B%20%E6%B3%A8%E6%84%8F%EF%BC%9A%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E4%B8%8B%EF%BC%8C%E5%BF%85%E9%A1%BB%E4%BC%A0%E9%80%92%20%E6%95%B4%E5%9E%8B%20%EF%BC%9B%204%E3%80%81new%20Date%20%28yyyy%2Cmth%2Cdd%29%3B\">new Date([params])传参讲解</a></p>\n</blockquote>\n</li>\n</ul>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">    const timestamp = 1521694261 * 1000 //注意如果要传入时间戳形式，要记得乘以1000，因为该函数会默认为传递的是毫秒数\n    function currentTime(val) &#123;\n      const date = new Date(val) //如果val为空，此时date时间格式为Mon Jun 19 2023 08:53:48 GMT+0800 (中国标准时间)\n      const zeroFill = function (value) &#123;\n        if (value < 10) &#123;\n          value = '0' + value\n        &#125;\n        return value\n      &#125;\n      //输出标准时间格式2014-09-05 13:14:20\n      const year = date.getFullYear(); //年\n      const month = zeroFill(date.getMonth() + 1); //月\n      const day = zeroFill(date.getDate()); //日\n      const hh = zeroFill(date.getHours()); //时\n      const mm = zeroFill(date.getMinutes()); //分\n      const ss = zeroFill(date.getSeconds()); //秒\n    //  const w = function () &#123;\n    //     arr = ['日', '一', '二', '三', '四', '五', '六']\n    //     return arr[date.getDay()]\n    //   &#125;()\n      return (`$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125; `)\n      // return (`$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125; 星期$&#123;w&#125;`) //标准时间回后面加上星期几\n      //输出简洁时间格式\n      // const year = date.getFullYear()% 100,; //年\n      // const month =date.getMonth() + 1; //月\n      // const day = date.getDate(); //日\n      // const hh = date.getHours(); //时\n      // const mm = date.getMinutes(); //分\n      // const ss = date.getSeconds(); //秒\n      // return (`$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125;`)\n    &#125;\n    currentTime(timestamp)\n</code></pre>\n<p>  （2）解法3. 通过引入第三方库(moment)来实现</p>\n<ul>\n<li>安装moment.js</li>\n</ul>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\"> npm install moment\n</code></pre>\n<ul>\n<li>导入moment.js模块（main.js）</li>\n</ul>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">    import moment from 'moment';\n    Vue.prototype.$moment = moment\n</code></pre>\n<ul>\n<li>格式化时间</li>\n</ul>\n<pre class=\" language-javaScript\"><code class=\"language-javaScript\">// `this.$moment()` 输出当前时间的moment对象\nconsole.log(this.$moment().format('YYYY-MM-DD HH:mm:ss')); // 2023-05-29 00:30:19\n</code></pre>\n","site":{"data":{"friends.json":"[ {\n    \"avatar\": \"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2\",\n    \"name\": \"Fabric\",\n    \"introduction\": \"A Blockchain Platform for the Enterprise\",\n    \"url\": \"https://hyperledger-fabric.readthedocs.io/en/master/\",\n    \"title\": \"前去学习\"\n}, {\n    \"avatar\": \"https://www.bootcdn.cn/assets/img/maoyun.svg\",\n    \"name\": \"BootCDN\",\n    \"introduction\": \"稳定、快速、免费的前端开源项目 CDN 加速服务。\",\n    \"url\": \"https://www.bootcdn.cn/\",\n    \"title\": \"前去加速\"\n}]"}},"excerpt":"","more":"<h1 id=\"牛客JS编程题（中等难度）\"><a href=\"#牛客JS编程题（中等难度）\" class=\"headerlink\" title=\"牛客JS编程题（中等难度）\"></a>牛客JS编程题（中等难度）</h1><h2 id=\"1-输出实现直角三角形-JS1\"><a href=\"#1-输出实现直角三角形-JS1\" class=\"headerlink\" title=\"1.输出实现直角三角形(JS1)\"></a>1.输出实现直角三角形(JS1)</h2><p>（1）解法1，封装成一个函数，利用循环+repeat来解</p>\n<pre><code class=\"javascript\">    var triangle = document.querySelector(&#39;.triangle&#39;);\n    function rightAngle(s, n) &#123;\n      let str = &#39;&#39;\n      for (let i = 1; i &lt;= n; i++) &#123;\n        //repeat(n) 重复复制一个字符串n次\n        str += s.repeat(i) + `&lt;br&gt;`\n      &#125;\n      return str\n    &#125;\n    triangle.innerHTML = rightAngle(&#39;*&#39;, 3)\n</code></pre>\n<p>（2）解法2. 直接写死输出</p>\n<pre><code class=\"javascript\">      var triangle = document.querySelector(&#39;.triangle&#39;);\n      // 补全代码\n      triangle.innerHTML=`*&lt;br&gt;**&lt;br&gt;***`\n</code></pre>\n<p>（3）解法3. 利用双层for循环来解</p>\n<pre><code class=\"javascript\">     var triangle = document.querySelector(&#39;.triangle&#39;);\n    // 补全代码\n    function rightAngle(s, n) &#123;\n      let str = &#39;&#39;\n      for (let i = 1; i &lt;= n; i++) &#123;\n        let word = &#39;&#39;\n        for (let j = 0; j &lt; i; j++) &#123;\n          word += s\n        &#125;\n        str += word + `&lt;br&gt;`\n      &#125;\n      return str\n    &#125;\n    triangle.innerHTML = rightAngle(&#39;*&#39;, 4)\n</code></pre>\n<h2 id=\"2-指定数组范围，随机输出一个无重复数组-JS7\"><a href=\"#2-指定数组范围，随机输出一个无重复数组-JS7\" class=\"headerlink\" title=\"2.指定数组范围，随机输出一个无重复数组(JS7)\"></a>2.指定数组范围，随机输出一个无重复数组(JS7)</h2><p>（1）解法1. 用random生成随机数字，利用indexOf判断数组中是否存在</p>\n<ul>\n<li>indexOf():该方法返回给定元素能找在数组中找到的第一个索引值，否则返回-1；</li>\n<li>includes():该方法返回 true or false  来判断数组中是否存在，可以检测NaN, 缺点低版本浏览器支持不是很友好</li>\n<li>some():用于检测是否有满足条件的元素，有，就不继续检测后面的元素，直接返回true,如果都不符合，返回false</li>\n</ul>\n<pre><code class=\"javascript\"> let arr = [100,20,50,58,6,69,5]\n    // some\n    let result = arr.some(e =&gt; e === 20) //true\n    if (result) &#123;\n    //do something...\n    &#125;;\n</code></pre>\n<ul>\n<li>find():它的参数是一个回调函数，所有数组元素依次遍历该回调函数，直到找出第一个返回值为true的元素，然后返回该元素，否则返回undefined。</li>\n</ul>\n<pre><code class=\"javascript\"> let arr = [100,20,50,58,6,69,5]\n    // some\n    let result = arr.find((index,value,arr) =&gt; &#123;if(value===20)&#125;) //true\n    if (result) &#123;\n    //do something...\n    &#125;;\n</code></pre>\n<hr>\n<pre><code class=\"javascript\">  function getUniqueNum(num1, num2, len) &#123;\n      let arr = []\n      while (arr.length !== len) &#123;\n        //math.random()要利用floor,ceil进行取整\n        // 需要[n， m):  Math.floor(Math.random() * (m - n)) + n;\n        // 需要[n， m]:   Math.floor(Math.random() * (m - n + 1)) + n;\n        // 解释：Math.random() * (m - n + 1) 的取值为[0, m - n + 1)， 再加n就是[n, m + 1)， 但这样就可能取到(m, m + 1) 的数， 所以向下取整。\n        let num = Math.floor(Math.random() * (num2 - num1 + 1) + num1)\n\n        if (arr.indexOf(num) === -1) &#123;\n          arr.push(num)\n        &#125;\n      &#125;\n      return arr\n    &#125;\n</code></pre>\n<p>（2）解法2.利用set唯一值特性去除</p>\n<blockquote>\n<p><a href=\"https://juejin.cn/post/7154195061734375437\">set教程详解</a></p>\n</blockquote>\n<pre><code class=\"javascript\">   function getUniqueNum(num1, num2, len) &#123;\n      let arr = new Set()\n      while (arr.size !== len) &#123;\n        let num = Math.floor(Math.random() * (num2 - num1 + 1) + num1)\n        arr.add(num)\n      &#125;\n      //注意要将set集合转换为数组\n      //可以利用 扩展运算符...，Array.from(),通过遍历set将每个元素加入到数组当中\n      return [...arr]\n    &#125;\n</code></pre>\n<h2 id=\"3-数组扁平化处理-JS20\"><a href=\"#3-数组扁平化处理-JS20\" class=\"headerlink\" title=\"3.数组扁平化处理(JS20)\"></a>3.数组扁平化处理(JS20)</h2><p>（1）解法1.通过判断数组中每个元素是否是数组，递归处理</p>\n<ul>\n<li>instanceof运算符用于检验构造函数的prototype属性是否出现在对象的原型链中的任何位置，返回一个布尔值。<code>let a = []; a instanceof Array; //true</code></li>\n<li>实例的构造函数属性constructor指向构造函数，那么通过constructor属性也可以判断是否为一个数组。<code> let a = [1,3,4]; a.constructor === Array;//true</code></li>\n<li>Object.prototype.toString().call()可以获取到对象的不同类型，而且也可以检验是否为数组，比如是否是一个函数，是否是数字等等</li>\n</ul>\n<pre><code class=\"javascript\">let a = [1,2,3]\nObject.prototype.toString.call(a) === &#39;[object Array]&#39;;//true\n//检验是否是函数\nlet a = function () &#123;&#125;;\nObject.prototype.toString.call(a) === &#39;[object Function]&#39;;//true\n//检验是否是数字\nlet b = 1;\nObject.prototype.toString.call(a) === &#39;[object Number]&#39;;//true\n</code></pre>\n<ul>\n<li>Array.isArray() 用于确定传递的值是否是一个数组，返回一个布尔值。<code> let a = [1,2,3] Array.isArray(a);//true</code></li>\n</ul>\n<hr>\n<pre><code class=\"javascript\">    function flatten(arr) &#123;\n      //如果传入的不是数组元素\n      if (!Array.isArray(arr)) return\n       let newArr = []\n      arr.forEach(item =&gt; &#123;\n        if (!Array.isArray(item)) &#123;\n          newArr.push(item)\n        &#125; else &#123;\n          newArr=newArr.concat(flatten(item))\n        &#125;\n      &#125;)\n      return newArr\n    &#125;\n</code></pre>\n<p>（2）解法2.toString和split结合</p>\n<pre><code class=\"javaScript\">    function flatten(arr) &#123;\n      let result = [];\n      result = arr.toString() // 1,2,3,4,1\n      result = result.split(&#39;,&#39;) // [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;1&#39;]\n      result = result.map(Number) // [1, 2, 3, 4, 1]\n      return result  //可以将三者合并成一句，此处仅为展示响应结果\n    &#125;\n</code></pre>\n<p> （3）解法3.用reduce方法累加实现（跟递归相似），reduce方法可缓存一个变量，迭代时我们可以操作这个变量，然后返回它。</p>\n<pre><code class=\"javaScript\">   function flatten(arr) &#123;\n      return arr.reduce((pre, next) =&gt; &#123;\n        if (Array.isArray(next)) &#123;\n          return pre.concat(flatten(next))\n        &#125; else &#123;\n          return pre.concat(next)\n        &#125;\n      &#125;, [])&#125;\n</code></pre>\n<p>  （4）解法4. 扩展运算符+some实现</p>\n<pre><code class=\"javaScript\">    function flatten(arr) &#123;\n      while (arr.some(item =&gt;\n          Array.isArray(item)\n        )) &#123;\n        arr = [].concat(...arr)\n      &#125;\n      return arr\n    &#125;\n</code></pre>\n<p>  （5）解法5. ES6的flat方法，flat() 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。默认为1层，参数depth也可以传进 Infinity，代表不论多少层都要展开。</p>\n<pre><code class=\"javaScript\">    function flatten(arr) &#123;\n      return arr.flat(Infinity)\n    &#125;\n</code></pre>\n<h2 id=\"4-时间格式化输出-JS47\"><a href=\"#4-时间格式化输出-JS47\" class=\"headerlink\" title=\"4.时间格式化输出(JS47)\"></a>4.时间格式化输出(JS47)</h2><p>  （1）解法1. toLocaleString()方法实现</p>\n<ul>\n<li>输出2019-09-27 16:23:21  <code>new Date().toLocaleString(&#39;zh&#39;, &#123; hour12: false &#125;).replaceAll(&#39;/&#39;, &#39;-&#39;) </code></li>\n<li>输出 2019-09-27 <code>new Date().toLocaleDateString(&#39;zh&#39;).replaceAll(&#39;/&#39;, &#39;-&#39;) </code></li>\n<li>16:23:21  <code>new Date().toLocaleTimeString(&#39;zh&#39;, &#123; hour12: false &#125;) </code></li>\n</ul>\n<pre><code class=\"javaScript\">    var t = 1521694261 // 该变量为时间戳，，即自从 Unix 纪元（格林威治时间 1970 年 1 月 1 日 00:00:00）到当前时间的秒数\n    function formatDate(data) &#123;\n      return new Date(data).toLocaleString(&#39;zh&#39;, &#123;\n        hour12: false\n      &#125;).replaceAll(&#39;/&#39;, &#39;-&#39;)\n    &#125;\n</code></pre>\n<p>   （2）解法2. 传统方法实现</p>\n<ul>\n<li>new Date([params]) 注意，如果传参，都是将其转换为中国标准时间来进行处理<blockquote>\n<p><a href=\"https://blog.csdn.net/huawuque004/article/details/81739442#:~:text=JavaScript%E4%B8%8B%EF%BC%8Cnew%20Date%20%28%5Bparams%5D%29%2C%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%9C%89%E4%BB%A5%E4%B8%8B%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%201%E3%80%81new%20Date%20%28%22month%20dd%2Cyyyy%20hh%3Amm%3Ass%22%29%3B,Date%20%28yyyy%2Cmth%2Cdd%2Chh%2Cmm%2Css%29%3B%20%E6%B3%A8%E6%84%8F%EF%BC%9A%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E4%B8%8B%EF%BC%8C%E5%BF%85%E9%A1%BB%E4%BC%A0%E9%80%92%20%E6%95%B4%E5%9E%8B%20%EF%BC%9B%204%E3%80%81new%20Date%20%28yyyy%2Cmth%2Cdd%29%3B\">new Date([params])传参讲解</a></p>\n</blockquote>\n</li>\n</ul>\n<pre><code class=\"javaScript\">    const timestamp = 1521694261 * 1000 //注意如果要传入时间戳形式，要记得乘以1000，因为该函数会默认为传递的是毫秒数\n    function currentTime(val) &#123;\n      const date = new Date(val) //如果val为空，此时date时间格式为Mon Jun 19 2023 08:53:48 GMT+0800 (中国标准时间)\n      const zeroFill = function (value) &#123;\n        if (value &lt; 10) &#123;\n          value = &#39;0&#39; + value\n        &#125;\n        return value\n      &#125;\n      //输出标准时间格式2014-09-05 13:14:20\n      const year = date.getFullYear(); //年\n      const month = zeroFill(date.getMonth() + 1); //月\n      const day = zeroFill(date.getDate()); //日\n      const hh = zeroFill(date.getHours()); //时\n      const mm = zeroFill(date.getMinutes()); //分\n      const ss = zeroFill(date.getSeconds()); //秒\n    //  const w = function () &#123;\n    //     arr = [&#39;日&#39;, &#39;一&#39;, &#39;二&#39;, &#39;三&#39;, &#39;四&#39;, &#39;五&#39;, &#39;六&#39;]\n    //     return arr[date.getDay()]\n    //   &#125;()\n      return (`$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125; `)\n      // return (`$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125; 星期$&#123;w&#125;`) //标准时间回后面加上星期几\n      //输出简洁时间格式\n      // const year = date.getFullYear()% 100,; //年\n      // const month =date.getMonth() + 1; //月\n      // const day = date.getDate(); //日\n      // const hh = date.getHours(); //时\n      // const mm = date.getMinutes(); //分\n      // const ss = date.getSeconds(); //秒\n      // return (`$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125;`)\n    &#125;\n    currentTime(timestamp)\n</code></pre>\n<p>  （2）解法3. 通过引入第三方库(moment)来实现</p>\n<ul>\n<li>安装moment.js</li>\n</ul>\n<pre><code class=\"javaScript\"> npm install moment\n</code></pre>\n<ul>\n<li>导入moment.js模块（main.js）</li>\n</ul>\n<pre><code class=\"javaScript\">    import moment from &#39;moment&#39;;\n    Vue.prototype.$moment = moment\n</code></pre>\n<ul>\n<li>格式化时间</li>\n</ul>\n<pre><code class=\"javaScript\">// `this.$moment()` 输出当前时间的moment对象\nconsole.log(this.$moment().format(&#39;YYYY-MM-DD HH:mm:ss&#39;)); // 2023-05-29 00:30:19\n</code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clj5e874h0001vkmu0xp46uuy","category_id":"clj5e874q0004vkmu1uf60h3p","_id":"clj5e874w000bvkmu1lot7gfl"},{"post_id":"clj5e874u0007vkmu1vf3bc2z","category_id":"clj5e874w0009vkmuhi049gpf","_id":"clj5e874y000fvkmucnb74twp"}],"PostTag":[{"post_id":"clj5e874h0001vkmu0xp46uuy","tag_id":"clj5e874t0005vkmu1j1lg1mn","_id":"clj5e874y000dvkmu1shje8uj"},{"post_id":"clj5e874h0001vkmu0xp46uuy","tag_id":"clj5e874w000avkmuecg7f1o6","_id":"clj5e874y000evkmu7joxe0og"},{"post_id":"clj5e874u0007vkmu1vf3bc2z","tag_id":"clj5e874t0005vkmu1j1lg1mn","_id":"clj5e874y000hvkmu3sc879dh"},{"post_id":"clj5e874u0007vkmu1vf3bc2z","tag_id":"clj5e874w000avkmuecg7f1o6","_id":"clj5e874z000ivkmuazg1edqe"}],"Tag":[{"name":"blog","_id":"clj5e874t0005vkmu1j1lg1mn"},{"name":"hexo","_id":"clj5e874w000avkmuecg7f1o6"}]}}